ch03. 데이터구조

리스트[], 튜플(), 딕셔너리{}, 셋() : 셋은 기피하는 단어들을 불 허용할 때 사용함

#1절. 리스트
##1.1 리스트 만들기
- []를 이용해서 만들며, 여러개 값(여러 타입)을 하나의 변수에 저장/관리할 수 있음
- list(리스트로 변환 가능한 자료)함수 이용도 가능
- 인덱스 : 각 요소의 위치. 0부터 시작. 맨 마지막 인덱스는 -1로 표현할 수 있음
- 슬라이싱 :( [from:stop:step] ) from생략하면 처음부터, stop생략하면 끝까지, step없애면 하나씩, 거꾸로하고 싶으면 -1 : 부분 데이터셋 추출
- 인덱스와 슬라이싱을 이용해서 읽기/쓰기 지원
##

정렬하는법 sorted()
오름차순 정렬 : print(sorted(나열가능한 데이터 변수))
내림차순 정렬 : print('내림차순 :', sorted(numbers, reverse=True))
합계가 가능한 리스트가 포함된 변수는 sum(변수) 로 합을 구할 수 있음

1.3 요소 추가
+ : 두 리스트 연결
* : 리스트를 곱한 수만큼 반복
append() : 리스트 맨 뒤에 요소 추가
extend() : 리스트 맨 뒤에 리스트를 요소별로 추가
insert(idx, 값) : idx번째 인덱스 위치에 추가 (기존 데이터는 shift) shift=뒤로 밀어진다

1.4 인덱싱과 요소 갯수
변수[index] : 인덱스를 이용한 접근
index(찾을데이터) : 해당 찾을 데이터가 있는 요소의 index를 반환
                찾을데이터가 없을 경우 오류 (오류 때문에 in 연산자와 함께 써야함)
count(찾을데이터) : 리스트에서 찾을데이터의 갯수 반환

1.5 원하는 요소 추출
리스트 슬라이싱 : 리스트에서 원하는 index의 데이터를 추출(인덱스의 범위가 벗어나도 에러 안 남)
	-[from:stop:step] from부터 stop 앞까지 step씩 증가하는 index의 값을 추출
	-from 생략시 처음을 의미. stop 생략시 끝을 의미. step 생략시 1을 의미. 모두 생략 가능(원래 list랑 똑같은 값)
	-음수 인덱스 가능
리스트 컴프리헨션 : 리스트에서 원하는 데이터를 추출
리스트 컴프리헨션 : 리스트에서 원하는 데이터를 추출
	- 변수 = [data for data in 리스트변수 if data>=3]
		* / + - **                          len(data)글자수, >= == > <

1.7 요소 삭제
pop() : 가장 마지막 인덱스 요소가 반환되고 삭제됨. (맨 마지막 인덱스 값이 삭제되어 반환됨)
pop(idx) : idx번째 요소가 반환되고 삭제
remove(지울data) : 리스트 안에 데이터 삭제 (오류 때문에 in 연산자와 함께 써야함)
del 변수[idx] : idx번째 요소가 삭제
clear() : 모든 항목 삭제 ex) 변수.clear()