 8장. 예외처리 
# 1절. 예외처리
- 예외가 날 가능성이 있는 부분에 대해 미리 예상하고, 그에 대한 처리를 프로그래밍 하는 것
 (이유 : 좀 더 안정적으로 실행)
``` 
ex. 파일을 다룰 때 : 파일이 없거나, 쓰기 금지로 인한 오류
ex. 데이터베이스 프로그래밍 시 제약조건 등으로 CRUD(CRATE, READ, UPDATE, DELETE) 오류
ex. 네트워크 프로그래밍 시 일시적인 네트워크 장애시 연결 실패 오류
ex. 리스트나 튜플의 인덱스를 벗어난 오류

```

### 에러
```
-문법 에러 : 문법적으로 나타나는 에러
-실행 에러(실행시 에러)
-1. 논리에러 : 프로그래머가 잘못 작성해서 이상한 결과가 나오는 경우
-2. 시스템에러 : 프로그래머의 의지와 상관없이 나타나는 에러
-3. 예외사항 : 정상적으로 프로그램이 동작하는 과정에서 나타나는 에러
               프로그램 실행 중에 발생하는 예지치 않는 사건
              ex. 정수를 0으로 나누는 경우, 배열 인덱스 벗어난 경우,
                  부적절한 형변환이 일어나는 경우
                  입출력을 위한 파일이 없는 경우
```

# 2절. try ~ except 로 예외처리
## 2.1 try ~ except
```
try:
    예외가 발생할 가능성이 있는 명령어
except:
    예외가 발생했을 경우 실행할 명령어

```

## 2.2 예외
### try ~ except
```
try:
    예외가 발생할 수도 있는 문장들
except 예외타입1:
    해당 예외가 발생할 경우 실행할 문장
except 예외타입2:
    해당 예외가 발생할 경우 실행할 문장
```

### PDF12page(try ~ except ~ else ~ finally)
```
try:
    예외가 발생할 수도 있는 구문
    try절을 수행하다 예외가 발생 안되면 else절을 한번 수행
except [예외타입 as e]:
    예외가 발생 되었을 경우 수행할 구문
else: (else는 생략 가능하다)
    try절을 수행하다 예외가 발생 안되면 else절을 한번 수행
finally:
    예외가 발생 안하면 try-else-finally 순으로 실행됨
    예외가 발생하면 try수행중 except절로 빠짐 이후 finally절 수행

```

# 4절. 추상클래스 & 추상메소드
- 추상클래스 : 객체를 생성할 수 없는 클래스. 상속받을 클래스의 포맷 제공
- 추상메소드 : 호출할 수 없는 메소드