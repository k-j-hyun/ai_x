**Oracle Database 입문 가이드**

---

✅ 1. 오라클이란?
Oracle Database는 세계에서 가장 널리 사용되는 상용 관계형 데이터베이스 관리 시스템(RDBMS) 중 하나야.

만든 회사: Oracle Corporation

주로 사용하는 언어: SQL

데이터 저장, 검색, 수정, 삭제 등을 효율적으로 처리

은행, 보험사, 대기업 등에서 많이 사용됨

✅ 2. 오라클의 핵심 개념
용어	설명
RDBMS	관계형 데이터베이스. 테이블(표)로 데이터를 관리함
SQL	Structured Query Language. 데이터 조작 언어
SCHEMA	데이터베이스 안에 있는 사용자 계정 및 구조
TABLE	행(row)과 열(column)로 구성된 데이터 저장 공간
ROW	하나의 데이터 기록 (레코드)
COLUMN	데이터 항목의 속성 (필드)

✅ 3. 오라클 기본 SQL 문법
▶️ 테이블 만들기 (CREATE)
sql
복사
편집
CREATE TABLE student (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(20),
    kor NUMBER,
    eng NUMBER,
    math NUMBER
);
▶️ 데이터 삽입 (INSERT)
sql
복사
편집
INSERT INTO student (id, name, kor, eng, math)
VALUES (1, '홍길동', 90, 80, 70);
▶️ 데이터 조회 (SELECT)
sql
복사
편집
SELECT * FROM student;

-- 평균이 80 이상인 학생만 보기
SELECT * FROM student
WHERE (kor + eng + math) / 3 >= 80;
▶️ 데이터 수정 (UPDATE)
sql
복사
편집
UPDATE student
SET math = 100
WHERE name = '홍길동';
▶️ 데이터 삭제 (DELETE)
sql
복사
편집
DELETE FROM student
WHERE id = 1;
▶️ 정렬, 그룹화
sql
복사
편집
-- 점수 평균이 높은 순으로 정렬
SELECT name, (kor + eng + math) / 3 AS avg_score
FROM student
ORDER BY avg_score DESC;

-- 이름별 평균 구하기 (GROUP BY)
SELECT name, AVG((kor + eng + math)/3) AS avg_score
FROM student
GROUP BY name;
✅ 4. 오라클 SQL Developer
Oracle에서 제공하는 무료 GUI 도구

SQL을 쉽게 실행하고 테이블을 시각적으로 관리 가능

설치 후 오라클 서버에 연결해 실습 가능

✅ 5. 실무에서 자주 쓰는 기능
기능	SQL 문
제약조건 (NOT NULL, UNIQUE 등)	CREATE TABLE 시 설정
조인 (JOIN)	SELECT ... FROM A JOIN B ON A.id = B.id
서브쿼리	SELECT ... WHERE col IN (SELECT ...)
시퀀스	CREATE SEQUENCE로 자동 증가값 생성
뷰	CREATE VIEW로 가상 테이블 만들기

🧪 예시: 평균이 80 이상인 학생의 이름과 평균 출력
sql
복사
편집
SELECT name, (kor + eng + math)/3 AS average
FROM student
WHERE (kor + eng + math)/3 >= 80;
🔚 요약
항목	설명
오라클이란?	강력한 상용 관계형 데이터베이스 시스템
사용하는 언어	SQL
데이터 조작 방법	INSERT, SELECT, UPDATE, DELETE
실무에서 중요한 기능	JOIN, GROUP BY, 서브쿼리, 제약조건 등


### ✅ Oracle이란?

- Oracle은 대표적인 **상용 RDBMS** (관계형 데이터베이스 관리 시스템)이다.
- **SQL**을 사용해 데이터를 저장, 조회, 수정, 삭제할 수 있다.
- 은행, 공공기관, 대기업 등에서 널리 사용된다.

---

### ✅ Oracle 설치 방법

#### 1. 로컬 설치

1. Oracle 공식 홈페이지 접속: https://www.oracle.com/database/technologies/
2. Oracle Database 21c 또는 19c Express Edition(무료) 다운로드
3. 설치 파일 실행 후:
   - 관리자 계정(SYS, SYSTEM) 비밀번호 설정
   - Listener 포트: 기본 1521
   - 설치 후 SQL Developer로 접속 가능

#### 2. 클라우드 설치 (Oracle Cloud Infrastructure)

1. Oracle Cloud 홈페이지 가입 (무료 티어 제공)
2. Autonomous Database 생성
3. SQL Developer Web에서 접속하거나 로컬 SQL Developer로 연결

---

### ✅ SQL Developer 사용법

- Oracle에서 제공하는 무료 GUI SQL 클라이언트
- 공식 다운로드 링크: https://www.oracle.com/database/sqldeveloper/

#### 사용법

1. SQL Developer 실행 → 새 연결 생성
2. 사용자 이름: SYSTEM 또는 HR
3. 비밀번호 입력 → 호스트 이름(localhost 또는 클라우드 주소)
4. 포트: 1521 / SID: XE 또는 서비스명 지정
5. 연결 성공 시 SQL 실행 창에서 쿼리 작성 가능

---

### ✅ 실습용 샘플 DB (SCOTT / HR)

- 설치 후 사용할 수 있는 기본 샘플 사용자

#### SCOTT 계정 활성화

ALTER USER scott ACCOUNT UNLOCK;
ALTER USER scott IDENTIFIED BY tiger;

#### HR 계정 활성화

ALTER USER hr ACCOUNT UNLOCK;
ALTER USER hr IDENTIFIED BY hr;

---

### ✅ 주요 SQL 문법

#### 테이블 생성

CREATE TABLE student (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(20),
    kor NUMBER,
    eng NUMBER,
    math NUMBER
);

#### 데이터 삽입

INSERT INTO student VALUES (1, '홍길동', 90, 80, 70);

#### 데이터 조회

SELECT * FROM student;

#### 조건 조회

SELECT * FROM student WHERE (kor + eng + math)/3 >= 80;

#### 수정

UPDATE student SET math = 100 WHERE name = '홍길동';

#### 삭제

DELETE FROM student WHERE id = 1;

---

### ✅ 핵심 SQL 개념

#### ▶ JOIN (테이블 연결)

SELECT a.name, b.dept_name
FROM employees a
JOIN departments b ON a.dept_id = b.dept_id;

#### ▶ GROUP BY (집계)

SELECT dept_id, AVG(salary) FROM employees GROUP BY dept_id;

#### ▶ 서브쿼리 (쿼리 안의 쿼리)

SELECT name FROM student
WHERE id IN (SELECT id FROM score WHERE kor >= 90);

#### ▶ ORDER BY (정렬)

SELECT name, (kor + eng + math)/3 AS avg_score
FROM student
ORDER BY avg_score DESC;

#### ▶ 제약조건

- NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK

---

### ✅ 팁

- SQL 명령은 대소문자 구분 없음 (단, 문자열은 구분)
- DESC 테이블명 → 테이블 구조 확인
- COMMIT → 변경 저장 / ROLLBACK → 변경 취소

---

✅ 오라클 튜닝(SQL 성능 향상)

▶ 왜 튜닝이 필요한가?

대용량 데이터에서 느린 SQL은 시스템 전체 성능 저하로 이어짐

튜닝은 SQL의 실행 속도, 자원 사용을 최적화하는 과정

▶ 기본 원칙

필요한 데이터만 조회하라 (SELECT *) → X

WHERE 절에서 인덱스를 활용하라

중복된 서브쿼리 피하기

JOIN 순서 및 방식(중첩 루프, 해시 조인 등) 고려

▶ 주요 기법

인덱스 사용: 자주 조회하는 컬럼에 인덱스 생성

실행계획 확인: EXPLAIN PLAN FOR ... 또는 AUTOTRACE

통계정보 최신화: DBMS_STATS.GATHER_TABLE_STATS()

바인드 변수 사용: 동일 SQL 반복 실행 시 성능 향상

▶ 예시

EXPLAIN PLAN FOR
SELECT * FROM student WHERE name = '홍길동';
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

▶ 참고 도구

SQL Developer의 Autotrace, SQL Tuning Advisor

Oracle Enterprise Manager (OEM)

이 자료는 Oracle DB 입문과 실습에 유용하게 쓸 수 있습니다.